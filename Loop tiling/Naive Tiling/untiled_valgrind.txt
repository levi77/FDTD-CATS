--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         6291456 B, 64 B, 12-way associative
Command:          ./untiled
Data file:        outuntiled
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   /home/serhan/Desktop/Dropbox/MASTER'S/Loop tiling/Naive Tiling/untiled.c
Auto-annotation:  off

--------------------------------------------------------------------------------
           Ir  I1mr  ILmr            Dr  D1mr  DLmr          Dw        D1mw        DLmw 
--------------------------------------------------------------------------------
2,097,315,730 1,052 1,041 1,048,618,767 2,512 2,309 262,156,934 262,143,600 262,143,561  PROGRAM TOTALS

--------------------------------------------------------------------------------
           Ir I1mr ILmr            Dr  D1mr  DLmr          Dw        D1mw        DLmw  file:function
--------------------------------------------------------------------------------
2,097,159,035    4    4 1,048,579,010     3     3 262,145,009 262,143,001 262,143,001  /home/serhan/Desktop/Dropbox/MASTER'S/Loop tiling/Naive Tiling/untiled.c:main

--------------------------------------------------------------------------------
-- User-annotated source: /home/serhan/Desktop/Dropbox/MASTER'S/Loop tiling/Naive Tiling/untiled.c
--------------------------------------------------------------------------------
           Ir I1mr ILmr          Dr D1mr DLmr          Dw        D1mw        DLmw 

-- line 2 ----------------------------------------
            .    .    .           .    .    .           .           .           .  
            .    .    .           .    .    .           .           .           .  #include <stdlib.h>
            .    .    .           .    .    .           .           .           .  #include <stdio.h>
            .    .    .           .    .    .           .           .           .  #include <time.h>
            .    .    .           .    .    .           .           .           .  //for L3 hit version, use MAX 6144*1024
            .    .    .           .    .    .           .           .           .  #define MAX 16*1024*1024 //16MB - L3 size is 6144 KB
            .    .    .           .    .    .           .           .           .  #define REP 1000
            .    .    .           .    .    .           .           .           .  //valgrind --tool=cachegrind --main-stacksize=33554432 --cachegrind-out-file=outuntiled ./untiled
            6    1    1           1    0    0           2           0           0  int main() { 
            .    .    .           .    .    .           .           .           .      int i,r;
            .    .    .           .    .    .           .           .           .      char array[MAX];
            .    .    .           .    .    .           .           .           .  
            .    .    .           .    .    .           .           .           .      // warmup to make things equal if array happens to fit in your L3
            .    .    .           .    .    .           .           .           .      // this line places some of the data to cache, when you remove this line we observe %100 write misses
            .    .    .           .    .    .           .           .           .      //for (i = 0; i < MAX; i++) {  
            .    .    .           .    .    .           .           .           .      //  array[i] = 0;
            .    .    .           .    .    .           .           .           .     // }
            .    .    .           .    .    .           .           .           .  
            2    0    0           0    0    0           2           1           1      clock_t t1 = clock();
            .    .    .           .    .    .           .           .           .      
            .    .    .           .    .    .           .           .           .      // un-tiled loop
        3,004    2    2       2,001    0    0           1           0           0      for (r = 0; r < REP; r++) {
  786,436,000    0    0 524,289,000    0    0       1,000           0           0          for (i = 0; i < MAX-1; i+=64) {	//Iterating 64 bytes to fulfill cacheline
1,310,720,000    0    0 524,288,000    0    0 262,144,000 262,143,000 262,143,000               array[i]=r;
            .    .    .           .    .    .           .           .           .               //array[i] = array[i+1]; //transfer write misses to read
            .    .    .           .    .    .           .           .           .               //array[i+1] =r; //and MAX-1 half the write misses             
            .    .    .           .    .    .           .           .           .          }
            .    .    .           .    .    .           .           .           .      }
            .    .    .           .    .    .           .           .           .      
            2    0    0           0    0    0           2           0           0      clock_t t2 = clock();
            .    .    .           .    .    .           .           .           .      
            9    1    1           3    1    1           1           0           0      printf ("Untiled: %f sec\n", (double)(t2 - t1) / CLOCKS_PER_SEC);
            .    .    .           .    .    .           .           .           .      
            7    0    0           1    0    0           1           0           0      printf ("array[0] = %d\n", array[0]);    // to prevent optimizing out all the writes
            5    0    0           4    2    2           0           0           0  }
            .    .    .           .    .    .           .           .           .  
            .    .    .           .    .    .           .           .           .  
            .    .    .           .    .    .           .           .           .  

--------------------------------------------------------------------------------
 Ir I1mr ILmr  Dr D1mr DLmr  Dw D1mw DLmw 
--------------------------------------------------------------------------------
100    0    0 100    0    0 100  100  100  percentage of events annotated

