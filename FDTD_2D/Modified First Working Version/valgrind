NAIVE FDTD2D

serhan@serhan-XPS-15-9550:~/Desktop/FDTD_CODES/FDTD_2D/CATS-1/CATS1-try/experiments$ valgrind --tool=cachegrind --cachegrind-out-file=outfdtd ./FDTD2D 
==5812== Cachegrind, a cache and branch-prediction profiler
==5812== Copyright (C) 2002-2015, and GNU GPL'd, by Nicholas Nethercote et al.
==5812== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==5812== Command: ./FDTD2D
==5812== 
--5812-- warning: L3 cache found, using its data for the LL simulation.
Problem size= 3000000 bytes

Total time T = 100
Problem space NZ = 500 x 500
Time spent = 16.709655
==5812== 
==5812== I   refs:      3,348,470,411
==5812== I1  misses:            1,083
==5812== LLi misses:            1,067
==5812== I1  miss rate:          0.00%
==5812== LLi miss rate:          0.00%
==5812== 
==5812== D   refs:      1,274,807,802  (1,199,094,481 rd   + 75,713,321 wr)
==5812== D1  misses:      178,449,297  (  177,698,577 rd   +    750,720 wr)
==5812== LLd misses:           49,324  (        1,953 rd   +     47,371 wr)
==5812== D1  miss rate:          14.0% (         14.8%     +        1.0%  )
==5812== LLd miss rate:           0.0% (          0.0%     +        0.1%  )
==5812== 
==5812== LL refs:         178,450,380  (  177,699,660 rd   +    750,720 wr)
==5812== LL misses:            50,391  (        3,020 rd   +     47,371 wr)
==5812== LL miss rate:            0.0% (          0.0%     +        0.1%  )




IN MY EXPERIMENT, CACHE MISSES ARE 10 TIMES LOWER AND THE CODE IS WORKING.

-FIELDS ARE 500^2 AND T=100. 
-TILE WIDTH IS CHOSEN FOR 80 TO REACH THE BEST 16K READING PERFORMANCE.



CATS-1 FDTD2D


serhan@serhan-XPS-15-9550:~/Desktop/FDTD_CODES/FDTD_2D/CATS-1/CATS1-try/experiments$ valgrind --tool=cachegrind --cachegrind-out-file=outcats1 ./CATS1-test 
==5871== Cachegrind, a cache and branch-prediction profiler
==5871== Copyright (C) 2002-2015, and GNU GPL'd, by Nicholas Nethercote et al.
==5871== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==5871== Command: ./CATS1-test
==5871== 
--5871-- warning: L3 cache found, using its data for the LL simulation.

 Tile Width: 40Problem size= 3000000 bytes

Max Tile Element size= 16000 bytes

Total time T = 100
Problem space NZ = 500 x 500
Time spent = 17.763447
==5871== 
==5871== I   refs:      4,365,598,002
==5871== I1  misses:            1,089
==5871== LLi misses:            1,075
==5871== I1  miss rate:          0.00%
==5871== LLi miss rate:          0.00%
==5871== 
==5871== D   refs:      1,872,696,903  (1,794,779,190 rd   + 77,917,713 wr)
==5871== D1  misses:       16,123,081  (   15,371,099 rd   +    751,982 wr)
==5871== LLd misses:           49,324  (        1,952 rd   +     47,372 wr)
==5871== D1  miss rate:           0.9% (          0.9%     +        1.0%  )
==5871== LLd miss rate:           0.0% (          0.0%     +        0.1%  )
==5871== 
==5871== LL refs:          16,124,170  (   15,372,188 rd   +    751,982 wr)
==5871== LL misses:            50,399  (        3,027 rd   +     47,372 wr)
==5871== LL miss rate:            0.0% (          0.0%     +        0.1%  )






